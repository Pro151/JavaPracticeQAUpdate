The `new` keyword in Java is used to create an instance (object) of a class. It dynamically allocates memory for the object and returns a reference to that memory location. This keyword is an essential part of object creation in Java.

Here's how the `new` keyword works:
1. It allocates memory for the object on the heap.
2. It initializes the object's fields (variables).
3. It invokes the constructor of the class to perform any necessary setup.

For example, let's say you have a class named `Car`:

```java
public class Car {
    private String brand;
    private String model;

    public Car(String brand, String model) {
        this.brand = brand;
        this.model = model;
    }

    // Other methods and fields...
}
```

You can create instances of the `Car` class using the `new` keyword:

```java
Car myCar = new Car("Toyota", "Camry");
```

In this example, `new Car("Toyota", "Camry")` is using the `new` keyword to create a new `Car` object and initialize it with the provided values.

The `new` keyword is part of the Java language itself and is not associated with a specific package or library. It's used in Java's syntax for object instantiation.